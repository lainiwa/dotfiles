#compdef _my my


_my() {
    local line

    _arguments -C \
        "-h[Show help information]" \
        "--h[Show help information]" \
        "1: :(show_installed \
              disks \
              current_layout_indicator \
              i3_exit_menu \
              fix_zsh_history \
              random_reddit_image \
              set_bg \
              save_4chan_thread_imgs \
              transfer \
              most_used_commands \
              history_hours_freq \
              weather \
              hr \
              cclip \
              screenshot \
              serveo \
              jqv \
              curl_first_ok \
              ip \
              pastebin \
              install_from_web \
              install_package \
              fullUpgrade \
              check_dependencies \
              dependencies)" \
        "*::arg:->args"

    case $line[1] in
        loudly)
            _hello_loudly
        ;;
        save_4chan_thread_imgs)
            _save_4chan_thread_imgs
        ;;
        screenshot)
            _screenshot
        ;;
        pastebin)
            _pastebin
        ;;
        install_package)
            _install_package
        ;;
        dependencies)
            _dependencies
        ;;
    esac
}


_set_bg() {
    :
}


_save_4chan_thread_imgs() {
    local line

    _arguments -C \
        "1: :(a c w m cgl cm f n jp v vg vp vr co g tv k o an tg sp asp sci his int out toy i po p ck ic wg lit mu fa 3 gd diy wsg qst biz trv fit x adv lgbt mlp news wsr vip b r9k pol bant soc s4s s hc hm h e u d y t hr gif aco r)" \
        "2: :(123 234)"
        "*::arg:->args"

}


_screenshot() {
    local -a commands
    commands=(
      'full:Shoot whole screen'
      'select:Select an area with mouse to shoot'
      'focused:Shoot focused window'
    )

    if (( CURRENT == 2 )); then
      _describe -t commands 'commands' commands
    fi

    return 0
}


_pastebin() {
    local line

    _arguments -C \
            "-h[Show help information]" \
        "--help[Show help information]" \
             "-x[Insert download URL into clipboard]" \
        "--xclip[Insert download URL into clipboard]" \
               "-e[Ecrypt file with GPG]" \
        "--encrypt[Ecrypt file with GPG]" \
        "*::arg:->args"

    case $line[1] in
        *)
            _files
        ;;
    esac
}


_install_package() {
    local -a commands
    commands=(
      'autobench:HTTP benchmark tool'
      'remarkable:Markdown graphical editor'
      'cgo:Console non-curses gopher client'
      'tomb:Encrypt files'
      'tor-browser:A tor browser from git releases'
      'vte-ng:Enhanced vte terminal widget'
      'dfc:Report file system space usage information'
    )

    if (( CURRENT == 2 )); then
      _describe -t commands 'commands' commands
    fi

    return 0
}


_dependencies() {
    local -a commands
    commands=(
      'self:Dependencies found in current file'
      'posix:POSIX utils'
      'non-posix:Non-POSIX dependencies'
      'check:Notify if some dependency is missing'
    )

    if (( CURRENT == 2 )); then
      _describe -t commands 'commands' commands
    fi

    return 0
}


_my "$@"
