- defaults:
    link:
        create: true
        relink: true


- clean: ['~']


- link:
    #~/.dotfiles: ''
    #~/.vim: vim
    # ~/.vimrc:
    #     if: command -v vim >/dev/null
    ~/.psqlrc:
        if: command -v psql >/dev/null
    # Rofi picker
    ~/.config/rofi:
        if: command -v rofi >/dev/null
        path: config/rofi
    # Sxiv image viewer
    ~/.config/sxiv:
        if: command -v sxiv >/dev/null
        path: config/sxiv
    ~/.config/nsxiv:
        if: command -v nsxiv >/dev/null
        path: config/sxiv
    # Dunst notification daemon
    ~/.config/dunst:
        if: command -v dunst >/dev/null
        path: config/dunst
    # Top & Htop
    ~/.config/procps:
        if: command -v top >/dev/null
        path: config/procps
    ~/.config/htop:
        if: command -v htop >/dev/null
        path: config/htop
    # OCaml's REPL
    ~/.config/.lambda-term-inputrc:
        if: command -v utop >/dev/null
        path: config/lambda-term-inputrc
    ~/scripts:
    # Zsh
    ~/.config/zsh:
        if: command -v zsh >/dev/null
        path: config/zsh
    ~/.zshenv:
        if: command -v zsh >/dev/null
    ~/.zprofile:
        if: command -v zsh >/dev/null
    ~/.zshrc:
        if: command -v zsh >/dev/null
        force: true
    # Tmux
    ~/.tmux.conf:
        if: command -v tmux >/dev/null
        path: tmux.conf
    ~/.tmate.conf:
        if: command -v tmate >/dev/null
        path: tmate.conf
    ~/.tmuxp:
        if: command -v tmuxp >/dev/null
        path: tmuxp
    # Sublime
    ~/.config/sublime-text-3/Packages/User/:
      glob: true
      relink: true
      if: command -v subl >/dev/null
      path: config/sublime3-settings/*
      exclude: [ config/sublime3-settings/Preferences.sublime-settings ]
    ~/.config/sublime-text-3/Packages/User/Preferences.sublime-settings:
        if: command -v subl >/dev/null
        path: config/sublime3-settings/Preferences.sublime-settings
        force: true
    # Lxterminal
    ~/.config/lxterminal:
        path: config/lxterminal
        if: command -v lxterminal >/dev/null
    # Kermit terminal
    ~/.config/kermit.conf:
        path: config/kermit.conf
        if: command -v kermit >/dev/null
    # Tig
    ~/.config/tig:
        path: config/tig
        if: command -v tig >/dev/null
    # Lazygit
    ~/.config/lazygit/config.yml:
        path: config/lazygit/config.yml
        if: command -v lazygit >/dev/null
    # Poetry
    ~/.config/pypoetry:
        path: config/pypoetry
        if: command -v poetry >/dev/null
    # Neovim
    ~/.config/nvim:
        path: config/nvim
        if: command -v nvim >/dev/null
    # Doom emacs
    ~/.doom.d:
        if: command -v emacs >/dev/null
    # Ranger
    ~/.config/ranger:
        if: command -v ranger >/dev/null
        path: config/ranger
    # Lf
    ~/.config/lf:
        if: command -v lf >/dev/null
        path: config/lf
    # Nnn
    ~/.config/nnn:
        if: command -v nnn >/dev/null
        path: config/nnn
    # Surfraw
    ~/.config/surfraw:
        if: command -v surfraw >/dev/null
        path: config/surfraw
    # Zathura
    ~/.config/zathura:
        if: command -v zathura >/dev/null
        path: config/zathura
    # X11
    ~/.config/i3:
        if: command -v i3 >/dev/null
        path: config/i3
    ~/.Xresources:
        if: command -v sxiv >/dev/null && xrdb Xresources
    ~/.Xdefaults:
        if: command -v urxvt >/dev/null
    ~/.xinitrc:
        if: command -v xinit >/dev/null
    ~/.xserverrc:
        if: command -v xinit >/dev/null
    # Beets
    ~/.config/beets/config.yaml:
        if: command -v beet >/dev/null
        path: config/beets/config.yaml
    # Torrents
    ~/.config/torrench:
        if: command -v torrench >/dev/null
        path: config/torrench
    ~/.config/Jackett:
        if: command -v docker >/dev/null
        path: config/Jackett
    # GTK
    ~/.gtkrc-2.0:
        if: dpkg -l libgtk2.0-0 &>/dev/null
    ~/.config/gtk-3.0:
        if: dpkg -l libgtk-3-0 &>/dev/null
        path: config/gtk-3.0
    # QT5
    ~/.config/qt5ct:
        if: command -v qt5ct >/dev/null
        path: config/qt5ct
    # Systemd
    ~/.config/systemd/user/:
        glob: true
        relink: true
        path: config/systemd/user/*
        if: command -v systemctl >/dev/null
    # XDG applications
    # ~/.local/share/applications/:
    #     glob: true
    #     relink: true
    #     path: local/share/applications/*
    #     if: command -v st >/dev/null
    # home-manager
    ~/.config/nixpkgs:
        path: config/nixpkgs
        if: command -v home-manager >/dev/null
    # Wyrd
    ~/.wyrdrc:
        if: command -v wyrd >/dev/null
    # Units
    ~/.units:
        if: command -v units >/dev/null
    # Mpv scripts and config
    ~/.config/mpv:
        path: config/mpv
        if: command -v mpv >/dev/null


- shell:
    # Urxvt extensions
    -
        description: Create folder for urxvt extensions
        command: |
            if command -v urxvt >/dev/null; then
                mkdir -p "${HOME}/.urxvt/ext"
            fi
    -
        description: Copy urxvt resize-font extension
        command: |
            FILE="${HOME}/.urxvt/ext/resize-font"
            URL="https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font"
            if command -v urxvt >/dev/null && [[ ! -f ${FILE} ]]; then
                wget --output-document="${FILE}" "${URL}"
            fi
    -
        description: Copy urxvt vtwheel extension
        command: |
            FILE="${HOME}/.urxvt/ext/vtwheel"
            URL="https://raw.githubusercontent.com/pkkolos/urxvt-scripts/master/vtwheel"
            if command -v urxvt >/dev/null && [[ ! -f ${FILE} ]]; then
                wget --output-document="${FILE}" "${URL}"
            fi
    # Sublime Text 3 package control
    -
        description: Install Sublime Text 3 package manager
        command: |
            SUBLIME_DIR=${HOME}/.config/sublime-text-3
            PKG_CONTROL_DIR="${SUBLIME_DIR}/Installed Packages/"
            URL="https://packagecontrol.io/Package Control.sublime-package"
            if command -v subl >/dev/null && [[ ! -d ${PKG_CONTROL_DIR} ]]; then
                mkdir -p "${PKG_CONTROL_DIR}"
                mkdir -p "${SUBLIME_DIR}/Packages/User"
                wget --directory-prefix "${PKG_CONTROL_DIR}" "${URL}"
            fi
    # Plugin manager for vim (vim-plug) and install plugins
    -
        description: Install vim-plug and vim plugins for vim
        command: |
            FILE="${HOME}/.vim/autoload/plug.vim"
            URL="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
            if command -v vim >/dev/null && [[ ! -f "${FILE}" ]]; then
                 curl --create-dirs -fLo "${FILE}" "${URL}"
                 vim +PlugInstall +qall!
            fi
    # Plugin manager for nvim (vim-plug) and install plugins
    -
        description: Install vim-plug and vim plugins for nvim
        command: |
            FILE="${HOME}/.local/share/nvim/site/autoload/plug.vim"
            URL="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
            if command -v nvim >/dev/null && [[ ! -f "${FILE}" ]]; then
                 curl --create-dirs -fLo "${FILE}" "${URL}"
                 nvim +PlugInstall +UpdateRemotePlugins +qall! || true
            fi
    # Link user.js to specific profile
    -
        description: Install user.js to *.lain-default profile
        command: |
            FILE=$(echo ${HOME}/.mozilla/firefox/*.lain-default)
            if [[ -d ${FILE} ]]; then
                rm "${FILE}/prefs.js" || true
                ln -sf ~/.dotfiles/firefox/*.js \
                       "${FILE}/"
            fi
    # # Install linuxbrew
    # -
    #     description: Install linuxbrew
    #     command: |
    #         if [[ -x /bin/bash ]]; then
    #             git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew
    #             mkdir ~/.linuxbrew/bin
    #             ln -sf ~/.linuxbrew/Homebrew/bin/brew ~/.linuxbrew/bin
    #         fi
    # Update dotbot
    -
        description: Installing submodules
        command: git submodule update --init --recursive
