- defaults:
    link:
        create: true
        relink: true


- clean: ['~']


- link:
    #~/.dotfiles: ''
    #~/.vim: vim
    # ~/.vimrc:
    #     if: command -v vim >/dev/null
    ~/.psqlrc:
        if: command -v psql >/dev/null
    # OCaml's REPL
    ~/.config/.lambda-term-inputrc:
        if: command -v utop >/dev/null
        path: config/lambda-term-inputrc
    ~/scripts:
    # Zsh
    ~/.zsh:
        if: command -v zsh >/dev/null
    ~/.zshenv:
        if: command -v zsh >/dev/null
    ~/.zprofile:
        if: command -v zsh >/dev/null
    ~/.zshrc:
        if: command -v zsh >/dev/null
        force: true
    # Tmux
    ~/.tmux.conf:
        if: command -v tmux >/dev/null
        path: tmux.conf
    ~/.tmuxp:
        if: command -v tmuxp >/dev/null
        path: tmuxp
    # Sublime
    ~/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings:
        if: command -v subl >/dev/null
        path: config/sublime3-settings/Anaconda.sublime-settings
    ~/.config/sublime-text-3/Packages/User/Markdown.sublime-settings:
        if: command -v subl >/dev/null
        path: config/sublime3-settings/Markdown.sublime-settings
    ~/.config/sublime-text-3/Packages/User/Package Control.sublime-settings:
        if: command -v subl >/dev/null
        path: config/sublime3-settings/Package Control.sublime-settings
    ~/.config/sublime-text-3/Packages/User/Preferences.sublime-settings:
        if: command -v subl >/dev/null
        path: config/sublime3-settings/Preferences.sublime-settings
        force: true
    # Neovim
    ~/.config/nvim:
        path: config/nvim
        if: command -v nvim >/dev/null
    # Ranger
    ~/.config/ranger/rc.conf:
        if: command -v ranger >/dev/null
        path: config/ranger/rc.conf
    ~/.config/ranger/scope.sh:
        if: command -v ranger >/dev/null
        path: config/ranger/scope.sh
    ~/.config/ranger/rifle.conf:
        if: command -v ranger >/dev/null
        path: config/ranger/rifle.conf
    # X11
    ~/.i3:
        if: command -v i3 >/dev/null
    ~/.Xdefaults:
        if: command -v urxvt >/dev/null
    ~/.xinitrc:
        if: command -v startx >/dev/null
    # Beets
    ~/.config/beets/config.yaml:
        if: command -v beet >/dev/null
        path: config/beets/config.yaml
    # Torrents
    ~/.config/torrench:
        if: command -v torrench >/dev/null
        path: config/torrench
    ~/.config/Jackett:
        if: command -v docker >/dev/null
        path: config/Jackett
    # Systemd
    ~/.config/systemd/user:
        path: config/systemd/user
        if: command -v systemctl >/dev/null
    # home-manager
    ~/.config/nixpkgs:
        path: config/nixpkgs
        if: command -v home-manager >/dev/null

- shell:
    # Urxvt extensions
    -
        description: Create folder for urxvt extensions
        command: command -v urxvt >/dev/null &&
                 mkdir --parents "${HOME}/.urxvt/ext" ||
                 true
    -
        description: Copy urxvt resize-font extension
        command: command -v urxvt >/dev/null &&
                 wget --output-document="${HOME}/.urxvt/ext/resize-font"
                      'https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font' ||
                 true
    -
        description: Copy urxvt vtwheel extension
        command: command -v urxvt >/dev/null &&
                 wget --output-document="${HOME}/.urxvt/ext/vtwheel"
                      'https://raw.githubusercontent.com/pkkolos/urxvt-scripts/master/vtwheel' ||
                 true
    # Sublime Text 3 package control
    -
        description: Install Sublime Text 3 package manager
        command: command -v subl >/dev/null &&
                 mkdir --parents "${HOME}/.config/sublime-text-3/Installed Packages/" &&
                 mkdir --parents "${HOME}/.config/sublime-text-3/Packages/User" &&
                 wget --directory-prefix "${HOME}/.config/sublime-text-3/Installed Packages/"
                      'https://packagecontrol.io/Package Control.sublime-package' ||
                 true
    # Plugin manager for vim (vim-plug) and install plugins
    -
        description: Install vim-plug and vim plugins
        command: command -v vim >/dev/null &&
                 curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim &&
                 vim +PlugInstall +qall! ||
                 true
    # Update dotbot
    -
        description: Installing submodules
        command: git submodule update --init --recursive
